#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int n, m;
int maze[200][200];

//상하좌우 움직임
int dx[] = { -1, 1, 0, 0 };
int dy[] = { 0, 0, -1, 1 };

int BFS(int x, int y) {
	queue<pair<int, int>> q;
	q.push({ x, y });
	
	while (!q.empty()) {
		int r_x = q.front().first;	//큐에 들어가있는 x좌표
		int r_y = q.front().second;	//y좌표
		q.pop();
		
		for (int i = 0; i < 4; i++) {
			int px = r_x + dx[i];	//해당좌표에서 상하좌우 검사
			int py = r_y + dy[i];

			if (px < 0 || px >= n || py < 0 || py >= m) {
				continue;
			}

			if (maze[px][py] == 0)
				continue;

			if (maze[px][py] == 1) {
				maze[px][py] = maze[r_x][r_y] + 1;
				q.push({ px, py });
			}
		}
	}

	return maze[n - 1][m - 1];
}

int main(void) {
	cin >> n >> m;
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> maze[i][j];
		}
	}

	cout << BFS(0, 0);

	return 0;
}
